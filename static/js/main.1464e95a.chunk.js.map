{"version":3,"sources":["Components/Card/Card/Header/Header.module.css","Components/Card/Card/CardFoot/CardFoot.module.css","Components/Card/Card/Card.module.css","Components/Card/Card/Header/Header.js","Components/Container/Container.js","Components/Card/Card/CardFoot/CardFootContact/Contact.js","Components/Card/Card/CardFoot/CardFoot.js","Components/Card/Card/Card.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","classes","card_info_head","card_info_dgree","card_info_description","contact","Section","props","children","Contact","card_foot_contact_item","href","content","xmlns","width","height","viewBox","d","CardFoot","card_foot","card_foot_location","card_foot_contact","Card","card","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8GACAA,EAAOC,QAAU,CAAC,eAAiB,+BAA+B,gBAAkB,gCAAgC,sBAAwB,sCAAsC,QAAU,0B,gBCA5LD,EAAOC,QAAU,CAAC,mBAAqB,qCAAqC,kBAAoB,oCAAoC,UAAY,8B,uCCAhJD,EAAOC,QAAU,CAAC,KAAO,qB,8LCYVC,EAVA,kBACX,kBAAC,WAAD,KACI,uBAAGC,UAAYC,IAAQC,gBAAvB,sBACA,uBAAGF,UAAWC,IAAQE,iBAAtB,iCACA,uBAAGH,UAAWC,IAAQG,uBAAtB,2RACA,wBAAIJ,UAAYC,IAAQI,SAAxB,aCAOC,EANC,SAACC,GAAD,OACZ,6BAASP,UAAU,aACdO,EAAMC,W,gBCYAC,EAbC,SAACF,GAAD,OACZ,wBAAIP,UAAYC,IAAQS,wBACpB,uBAAGC,KAAMJ,EAAMK,SACX,yBACIC,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,aAClE,0BACIC,EAAGV,EAAMU,Q,gBCqBdC,EA1BE,kBACb,yBAAKlB,UAAYC,IAAQkB,WACrB,yBAAKnB,UAAYC,IAAQmB,oBAAzB,IAA+C,yBAAKP,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,MACrG,0BACIE,EAAE,mJAFV,uBAOA,wBAAIjB,UAAYC,IAAQoB,mBACpB,kBAAC,EAAD,CACIT,QAAQ,2BACRK,EAAE,oOAEN,kBAAC,EAAD,CACIL,QAAQ,2IACRK,EAAE,ohCAEN,kBAAC,EAAD,CACIL,QAAQ,6BACRK,EAAE,otB,gBCLHK,E,iLAVP,OAAO,yBACPtB,UAAaC,IAAQsB,MACjB,kBAAC,EAAD,KACI,kBAAC,EAAD,MACA,kBAAC,EAAD,Y,GAPGC,aCEJC,EALH,WACV,OAAO,kBAAC,EAAD,OCQWC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.1464e95a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card_info_head\":\"Header_card_info_head__1sS61\",\"card_info_dgree\":\"Header_card_info_dgree__2Ldcl\",\"card_info_description\":\"Header_card_info_description__2swI6\",\"contact\":\"Header_contact__qxl2A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card_foot_location\":\"CardFoot_card_foot_location__3o8OB\",\"card_foot_contact\":\"CardFoot_card_foot_contact__1smuF\",\"card_foot\":\"CardFoot_card_foot__3fc8j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__Pe1Kj\"};","import React, { Fragment } from 'react';\r\nimport classes from './Header.module.css';\r\n\r\nconst Header = () => (\r\n    <Fragment>\r\n        <p className= {classes.card_info_head}> Bladimir Orihuela</p>\r\n        <p className={classes.card_info_dgree}>Software Engineer at Hexaware</p>\r\n        <p className={classes.card_info_description}> Hi, my name is Bladimir and I am a Software Engineer, working in Hexaware Technologies. I like challenges and grow as professional every day. I enjoy developing creative solutions in React js, Angular, Java and Python. I consider myself as a great team member, and a Dog lover. </p>\r\n        <h2 className= {classes.contact}>Contact</h2>\r\n    </Fragment>\r\n)\r\n\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Section = (props) => (\r\n    <section className=\"card_info\">\r\n        {props.children}\r\n    </section>\r\n)\r\n\r\nexport default Section","import React from 'react';\r\nimport classes from './Contact.module.css';\r\n\r\nconst Contact = (props) => (\r\n    <li className= {classes.card_foot_contact_item}>\r\n        <a href={props.content}>\r\n            <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\" width=\"50\" height=\"50\" viewBox=\"0 0 24 24\">\r\n                <path\r\n                    d={props.d}>\r\n                </path>\r\n            </svg>\r\n        </a>\r\n    </li>\r\n)\r\n\r\nexport default Contact;","import React from 'react';\r\nimport Contact from './CardFootContact/Contact';\r\nimport classes from './CardFoot.module.css';\r\n\r\nconst CardFoot = () => (\r\n    <div className= {classes.card_foot}>\r\n        <div className= {classes.card_foot_location} > <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\">\r\n            <path\r\n                d=\"M12 0C7.802 0 4 3.403 4 7.602 4 11.8 7.469 16.812 12 24c4.531-7.188 8-12.2 8-16.398C20 3.403 16.199 0 12 0zm0 11a3 3 0 1 1 0-6 3 3 0 0 1 0 6z\">\r\n            </path>\r\n        </svg> Saltillo, Coahuila\r\n        </div>\r\n\r\n        <ul className= {classes.card_foot_contact} >\r\n            <Contact\r\n                content=\"mailto:oirbl@hotmail.com\"\r\n                d=\"M12 2.02c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm0 12.55L6.008 8h11.983L12 12.57zm0 1.288L6 9.229V16h12V9.229l-6 4.629z\"\r\n            />\r\n            <Contact\r\n                content=\"https://api.whatsapp.com/send?phone=528442736384&text=Hola%20Bladimir,%20vi%20tu%20tarjeta%20y%20me%20interesaria%20hablar%20contigo.%20\"\r\n                d=\"M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10S2 17.514 2 12 6.486 2 12 2zm0-2C5.373 0 0 5.373 0 12s5.373 12 12 12 12-5.373 12-12S18.627 0 12 0zM6.029 18l.844-3.081a5.946 5.946 0 0 1-.794-2.973A5.954 5.954 0 0 1 12.025 6a5.907 5.907 0 0 1 4.206 1.744 5.908 5.908 0 0 1 1.74 4.207 5.954 5.954 0 0 1-5.946 5.946c-.995 0-1.976-.25-2.844-.724L6.029 18zm3.298-1.903c.838.497 1.638.796 2.696.796a4.95 4.95 0 0 0 4.944-4.942 4.941 4.941 0 1 0-9.884-.004c0 1.112.326 1.946.873 2.817l-.499 1.824 1.87-.491zm5.694-2.732c-.037-.062-.136-.099-.285-.174a24.79 24.79 0 0 0-1.015-.483c-.136-.05-.235-.074-.334.074a9.044 9.044 0 0 1-.47.583c-.087.099-.173.112-.322.037-.149-.074-.627-.231-1.195-.737a4.502 4.502 0 0 1-.827-1.029c-.087-.149-.009-.229.065-.303l.223-.26.149-.248c.05-.099.025-.186-.012-.26l-.458-1.103c-.121-.29-.243-.25-.334-.255L9.92 9.2c-.099 0-.26.037-.396.186s-.52.508-.52 1.24c0 .731.532 1.438.607 1.537.074.099 1.048 1.6 2.538 2.243.354.153.631.245.847.313.356.113.68.097.936.059.285-.043.879-.359 1.003-.706.123-.348.123-.645.086-.707z\"\r\n            />\r\n            <Contact\r\n                content=\"https://github.com/elbladi\"\r\n                d=\"M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10S2 17.514 2 12 6.486 2 12 2zm0-2C5.373 0 0 5.373 0 12s5.373 12 12 12 12-5.373 12-12S18.627 0 12 0zm0 6a6 6 0 0 0-1.896 11.693c.3.056.396-.13.396-.289v-1.117c-1.669.363-2.017-.707-2.017-.707-.272-.693-.666-.878-.666-.878-.544-.373.041-.365.041-.365.603.042.92.619.92.619.535.917 1.403.652 1.746.499.054-.388.209-.652.381-.802-1.333-.152-2.733-.667-2.733-2.965 0-.655.234-1.19.618-1.61-.062-.153-.268-.764.058-1.59 0 0 .504-.161 1.65.615A5.782 5.782 0 0 1 12 8.901c.51.002 1.023.069 1.503.202 1.146-.776 1.648-.615 1.648-.615.327.826.121 1.437.06 1.588.385.42.617.955.617 1.61 0 2.305-1.404 2.812-2.74 2.96.216.186.412.551.412 1.111v1.646c0 .16.096.347.4.288A6 6 0 0 0 12 6z\"\r\n            />\r\n        </ul>\r\n    </div>\r\n)\r\n\r\nexport default CardFoot;","import React, { Component } from 'react';\r\nimport Header from './Header/Header';\r\nimport Section from '../../Container/Container';\r\nimport CardFoot from './CardFoot/CardFoot';\r\nimport classes from './Card.module.css';\r\n\r\nclass Card extends Component {\r\n    render() {\r\n\r\n        return <div \r\n        className = {classes.card}>\r\n            <Section>\r\n                <Header />\r\n                <CardFoot />\r\n            </Section>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Card;","import React from 'react';\nimport Card from '../src/Components/Card/Card/Card'\n\nconst App = () => {\n  return <Card />\n   \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}